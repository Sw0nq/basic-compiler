from lexer import lexer
from parser import Parser
from codegen import generate_python_code

def main():
    # –ß–∏—Ç–∞–µ–º –∫–æ–¥ –∏–∑ —Ñ–∞–π–ª–∞
    with open("examples/input.txt", "r", encoding="utf-8") as f:
        code = f.read()

    # –õ–µ–∫—Å–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
    tokens = lexer(code)
    print("\nüîπ –¢–æ–∫–µ–Ω—ã:", tokens)

    # –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑
    parser = Parser(tokens)
    ast = parser.parse()
    print("\nüîπ AST:", ast)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞
    generated_code = generate_python_code(ast)
    print("\nüîπ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥:\n", generated_code)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –≤ —Ñ–∞–π–ª
    with open("examples/output.py", "w", encoding="utf-8") as f:
        f.write(generated_code)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥
    print("\nüîπ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    exec(generated_code)

if __name__ == "__main__":
    main()
